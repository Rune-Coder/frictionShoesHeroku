{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\passwordNew\\\\passwordNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classes from './passwordNew.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PasswordNew(props) {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Change Password';\n  });\n  const [useEmail, setUseEmail] = useState(\" \");\n  const [useNewPassword, setUseNewPassword] = useState(\" \");\n  const [useConfirmPassword, setUseConfirmPassword] = useState(\" \");\n  const [errMsg, setErrMsg] = useState({\n    pw: \"ok\",\n    cpw: \"ok\"\n  });\n  let navigate = useNavigate();\n\n  async function profileHandler(event) {\n    event.preventDefault();\n    if (useEmail.trim() === \"\" || useNewPassword.trim() === \"\" || useConfirmPassword.trim() === \"\") return;\n    if (errMsg.pw !== \"ok\" || errMsg.cpw !== \"ok\") return;\n    navigate('/otp', {\n      state: {\n        email: useEmail,\n        password: useNewPassword\n      }\n    });\n  }\n\n  function emailHandler(event) {\n    setUseEmail(event.target.value);\n  }\n\n  function newPasswordHandler(event) {\n    const pw = event.target.value;\n    setUseNewPassword(pw);\n    if (pw.length < 8) setErrMsg({ ...errMsg,\n      pw: \"Minimum length must be 8\"\n    });else if (/[A-Z]/.test(pw) === false) setErrMsg({ ...errMsg,\n      pw: \"Password must have atleast 1 uppercase character\"\n    });else if (/\\d/.test(pw) === false) setErrMsg({ ...errMsg,\n      pw: \"Password must have atleast 1 numeric character\"\n    });else if (/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(pw) === false) setErrMsg({ ...errMsg,\n      pw: \"Password must have atleast 1 special character\"\n    });else setErrMsg({ ...errMsg,\n      pw: \"ok\"\n    });\n  }\n\n  function confirmPasswordHandler(event) {\n    const cpw = event.target.value;\n    setUseConfirmPassword(cpw);\n    if (cpw !== useNewPassword) setErrMsg({ ...errMsg,\n      cpw: \"This field must be same as your password\"\n    });else setErrMsg({ ...errMsg,\n      cpw: \"ok\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Set New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.loginForm,\n      onSubmit: profileHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: emailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Email*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \" \",\n          maxlength: \"16\",\n          required: true,\n          className: classes.textBox,\n          onBlur: newPasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"New Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), errMsg.pw !== \"ok\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errmsg,\n          children: errMsg.pw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \" \",\n          maxlength: \"16\",\n          required: true,\n          className: classes.textBox,\n          onBlur: confirmPasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Confirm Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), errMsg.cpw !== \"ok\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errmsg,\n          children: errMsg.cpw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: classes.save,\n        children: \"CONTINUE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordNew, \"KtRBQIVTkMQnuX2YIfhfo1TFq3c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PasswordNew;\nexport default PasswordNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordNew\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/passwordNew/passwordNew.js"],"names":["React","useState","useEffect","useNavigate","classes","PasswordNew","props","document","title","useEmail","setUseEmail","useNewPassword","setUseNewPassword","useConfirmPassword","setUseConfirmPassword","errMsg","setErrMsg","pw","cpw","navigate","profileHandler","event","preventDefault","trim","state","email","password","emailHandler","target","value","newPasswordHandler","length","test","confirmPasswordHandler","layout","loginForm","details","textBox","formLabel","errmsg","save"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport classes from './passwordNew.module.css';\r\n\r\nfunction PasswordNew(props){\r\n\r\n    useEffect(() => {\r\n        document.title = 'Change Password';\r\n    });\r\n\r\n    const [useEmail, setUseEmail] = useState(\" \");\r\n    const [useNewPassword, setUseNewPassword] = useState(\" \");\r\n    const [useConfirmPassword, setUseConfirmPassword] = useState(\" \");\r\n    const [errMsg, setErrMsg] = useState({ pw: \"ok\", cpw: \"ok\" });\r\n\r\n    let navigate = useNavigate();\r\n\r\n    async function profileHandler(event){\r\n        event.preventDefault();\r\n        if(useEmail.trim() === \"\" || useNewPassword.trim() === \"\" || useConfirmPassword.trim() === \"\")\r\n            return;\r\n\r\n        if(errMsg.pw !== \"ok\" || errMsg.cpw !== \"ok\")\r\n            return;\r\n \r\n        navigate('/otp', {state: { email: useEmail, password: useNewPassword } });\r\n        \r\n    }\r\n    function emailHandler(event){\r\n        setUseEmail(event.target.value);\r\n    }\r\n    function newPasswordHandler(event){\r\n        const pw = event.target.value;\r\n        setUseNewPassword(pw);\r\n\r\n        if(pw.length < 8)\r\n            setErrMsg({ ...errMsg, pw: \"Minimum length must be 8\"});\r\n        else if(/[A-Z]/.test(pw) === false)\r\n            setErrMsg({ ...errMsg, pw: \"Password must have atleast 1 uppercase character\"});\r\n        else if(/\\d/.test(pw) === false)\r\n            setErrMsg({ ...errMsg, pw: \"Password must have atleast 1 numeric character\"});\r\n        else if(/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(pw) === false)\r\n            setErrMsg({ ...errMsg, pw: \"Password must have atleast 1 special character\"});\r\n        else\r\n            setErrMsg({ ...errMsg, pw: \"ok\"});\r\n    }\r\n    function confirmPasswordHandler(event){\r\n        const cpw = event.target.value;\r\n        setUseConfirmPassword(cpw);\r\n\r\n        if(cpw !== useNewPassword)\r\n            setErrMsg({ ...errMsg, cpw: \"This field must be same as your password\"});\r\n        else\r\n            setErrMsg({ ...errMsg, cpw: \"ok\"});\r\n    }\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <p>Set New Password</p>\r\n            <form className={classes.loginForm} onSubmit = {profileHandler}>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {emailHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       Email*\r\n                    </label>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"password\" \r\n                        placeholder=' '\r\n                        maxlength=\"16\"   \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {newPasswordHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       New Password*\r\n                    </label>\r\n                    {errMsg.pw !== \"ok\" && <p className={classes.errmsg}>{errMsg.pw}</p>}\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"password\" \r\n                        placeholder=' ' \r\n                        maxlength=\"16\"  \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {confirmPasswordHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       Confirm Password*\r\n                    </label>\r\n                    {errMsg.cpw !== \"ok\" && <p className={classes.errmsg}>{errMsg.cpw}</p>}\r\n                </div>\r\n\r\n                <button type= \"submit\" value=\"Submit\" className={classes.save}>CONTINUE</button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordNew;"]},"metadata":{},"sourceType":"module"}