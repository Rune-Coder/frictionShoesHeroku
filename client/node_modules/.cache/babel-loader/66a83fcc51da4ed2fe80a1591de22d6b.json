{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\payment\\\\paymentOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BadgeCheckIcon from '../../icons/badgeCheckIcon';\nimport classes from './paymentOptions.module.css';\nimport { addressActions } from '../../store/addressStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentOptions(props) {\n  _s();\n\n  const bill = localStorage.getItem(\"billStore\") ? JSON.parse(localStorage.getItem(\"billStore\")) : [{\n    amount: 0\n  }];\n  const products = localStorage.getItem(\"products\") ? JSON.parse(localStorage.getItem(\"products\")) : [];\n  const address = useSelector(state => state.address.currAddress);\n  const userSub = useSelector(state => state.login.userData);\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [orders, setOrders] = useState([]);\n  const [ops, setOps] = useState(\" \");\n  useEffect(() => {\n    //get orders data mongodb\n    async function getOrders(email) {\n      const res = await fetch(\"/api/user/history-get\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.orders) setOrders(data.orders);\n    }\n\n    getOrders(userSub.email);\n  }, [userSub.email]); //post orders\n\n  async function postOrders(email, orders) {\n    const cart = [];\n    const bill = [];\n    const res = await fetch(\"/api/user/history-create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        cart,\n        bill,\n        orders\n      })\n    });\n    await res.json();\n  }\n\n  function toOrders() {\n    navigate(`/orders`, {\n      replace: true\n    });\n  }\n\n  function pay(event) {\n    if (ops === \" \") return;else if (ops === \"cash\") {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0');\n      var yyyy = today.getFullYear();\n      today = dd + '/' + mm + '/' + yyyy;\n      var currOrder = orders.slice();\n      currOrder.push({\n        order_id: \"\",\n        status: \"processing\",\n        bill: bill,\n        products: products,\n        payment: \"cash\",\n        address: address,\n        date: today\n      });\n      postOrders(userSub.email, currOrder);\n      dispatch(addressActions.remAddress());\n      toOrders();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.paymentCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.summary,\n      children: [\"Order Total \\u20B9 \", bill[0].amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), \"PAYMENT OPTIONS\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.paymentOps,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setOps(\"cash\"),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.selectOps,\n          children: [\"Cash On Delivery\", ops === \"cash\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.check,\n            children: /*#__PURE__*/_jsxDEV(BadgeCheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setOps(\"online\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.selectOps,\n          children: [\"Pay Now\", ops === \"online\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.check,\n            children: /*#__PURE__*/_jsxDEV(BadgeCheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subHead,\n          children: \"Debit Card, Credit Card, Net Banking, UPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: pay,\n          className: classes.continue,\n          children: \"CONTINUE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentOptions, \"H0YptZ/WXdpNEG1asymQZokkYb4=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n\n_c = PaymentOptions;\nexport default PaymentOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentOptions\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/payment/paymentOptions.js"],"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","BadgeCheckIcon","classes","addressActions","PaymentOptions","props","bill","localStorage","getItem","JSON","parse","amount","products","address","state","currAddress","userSub","login","userData","navigate","dispatch","orders","setOrders","ops","setOps","getOrders","email","res","fetch","method","headers","body","stringify","data","json","ok","postOrders","cart","toOrders","replace","pay","event","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","currOrder","slice","push","order_id","status","payment","date","remAddress","paymentCard","summary","paymentOps","selectOps","check","subHead","continue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport BadgeCheckIcon from '../../icons/badgeCheckIcon';\r\nimport classes from './paymentOptions.module.css';\r\nimport { addressActions } from '../../store/addressStore';\r\n\r\nfunction PaymentOptions(props){\r\n    const bill = localStorage.getItem(\"billStore\") ? JSON.parse(localStorage.getItem(\"billStore\")) : [{amount: 0}];\r\n    const products = localStorage.getItem(\"products\") ? JSON.parse(localStorage.getItem(\"products\")) : [];\r\n    const address = useSelector((state) => state.address.currAddress);\r\n    const userSub = useSelector((state) => state.login.userData);\r\n    let navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [ops, setOps] = useState(\" \");\r\n\r\n    useEffect(() =>{\r\n\r\n        //get orders data mongodb\r\n        async function getOrders(email){\r\n\r\n            const res = await fetch(\"/api/user/history-get\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email })\r\n            });\r\n        \r\n            const data = await res.json();\r\n                \r\n            if(res.ok && data.orders)\r\n                setOrders(data.orders);\r\n\r\n        }\r\n        getOrders(userSub.email);\r\n\r\n    }, [userSub.email]);\r\n\r\n    //post orders\r\n    async function postOrders(email, orders){\r\n\r\n        const cart = [];\r\n        const bill = [];\r\n        const res = await fetch(\"/api/user/history-create\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email, cart, bill, orders })\r\n        });\r\n    \r\n        await res.json();\r\n\r\n    }\r\n\r\n    function toOrders(){\r\n        navigate(`/orders`, { replace: true });\r\n    }\r\n\r\n    function pay(event){\r\n\r\n        if(ops === \" \")\r\n            return;\r\n        else if(ops === \"cash\"){\r\n\r\n            var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            var yyyy = today.getFullYear();\r\n\r\n            today = dd + '/' + mm + '/' + yyyy;\r\n\r\n            var currOrder = orders.slice();\r\n            currOrder.push({\r\n                order_id: \"\",\r\n                status: \"processing\",\r\n                bill: bill,\r\n                products: products,\r\n                payment: \"cash\",\r\n                address: address,\r\n                date: today\r\n            });\r\n\r\n            postOrders(userSub.email, currOrder);\r\n\r\n            dispatch(addressActions.remAddress());\r\n\r\n            toOrders();\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={classes.paymentCard}>\r\n            <div className={classes.summary}>\r\n                Order Total &#8377; {bill[0].amount}\r\n            </div>\r\n            PAYMENT OPTIONS\r\n            <ul className={classes.paymentOps}>\r\n                <li onClick = {() => setOps(\"cash\")}>\r\n                    <div className={classes.selectOps}>Cash On Delivery\r\n                    {ops === \"cash\" && <span className={classes.check}><BadgeCheckIcon /></span>}</div>\r\n                </li>\r\n                <li onClick = {() => setOps(\"online\")}>  \r\n                    <div className={classes.selectOps}>Pay Now\r\n                    {ops === \"online\" && <span className={classes.check}><BadgeCheckIcon /></span>}</div>\r\n                    <div className={classes.subHead}>Debit Card, Credit Card, Net Banking, UPI</div>\r\n                </li>\r\n                <li><button onClick = {pay} className={classes.continue}>CONTINUE</button></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentOptions;"]},"metadata":{},"sourceType":"module"}