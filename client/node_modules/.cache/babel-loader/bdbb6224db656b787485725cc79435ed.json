{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\passwordNew\\\\passwordNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NotificationCard from '../../card/notificationCard';\nimport preloader from '../../image/sectionLoader.gif';\nimport classes from './passwordNew.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PasswordNew(props) {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Change Password';\n  });\n  const [useEmail, setUseEmail] = useState(\" \");\n  const [useNewPassword, setUseNewPassword] = useState(\" \");\n  const [useConfirmPassword, setUseConfirmPassword] = useState(\" \");\n  const [updated, setUpdated] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [errMsg, setErrMsg] = useState({\n    pw: \"ok\",\n    cpw: \"ok\"\n  });\n  let navigate = useNavigate();\n\n  async function profileHandler(event) {\n    event.preventDefault();\n    if (useEmail.trim() === \"\" || useNewPassword.trim() === \"\" || useConfirmPassword.trim() === \"\") return;\n    setLoader(true);\n  }\n\n  function emailHandler(event) {\n    setUseEmail(event.target.value);\n  }\n\n  function newPasswordHandler(event) {\n    const pw = event.target.value;\n    setUseNewPassword(pw);\n    if (pw.length < 8) setErrMsg({ ...errMsg,\n      pw: \"Minimum length must be 8\"\n    });else if (/[A-Z]/.test(pw) === false) setErrMsg({ ...errMsg,\n      pw: \"Password must have atleast 1 uppercase character\"\n    });else if (/\\d/.test(pw) === false) setErrMsg({ ...errMsg,\n      pw: \"Password must have atleast 1 numeric character\"\n    });else if (/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(pw) === false) setErrMsg({ ...errMsg,\n      pw: \"Password must have atleast 1 special character\"\n    });else setErrMsg({ ...errMsg,\n      pw: \"ok\"\n    });\n  }\n\n  function confirmPasswordHandler(event) {\n    const cpw = event.target.value;\n    setUseConfirmPassword(cpw);\n    if (cpw !== useNewPassword) setErrMsg({ ...errMsg,\n      cpw: \"This field must be same as your password\"\n    });else setErrMsg({ ...errMsg,\n      cpw: \"ok\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.loginForm,\n      onSubmit: profileHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: emailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Email*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: newPasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"New Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), errMsg.pw !== \"ok\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errmsg,\n          children: errMsg.pw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: confirmPasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Confirm Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), errMsg.cpw !== \"ok\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errmsg,\n          children: errMsg.cpw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: classes.save,\n        children: \"CONTINUE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), updated && /*#__PURE__*/_jsxDEV(NotificationCard, {\n      value: \"Password Updated Successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }, this), loader && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: preloader,\n      className: classes.load,\n      alt: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordNew, \"UBM+hknL8WtD+uc02dO8CGvlhdM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PasswordNew;\nexport default PasswordNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordNew\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/passwordNew/passwordNew.js"],"names":["React","useState","useEffect","useNavigate","NotificationCard","preloader","classes","PasswordNew","props","document","title","useEmail","setUseEmail","useNewPassword","setUseNewPassword","useConfirmPassword","setUseConfirmPassword","updated","setUpdated","loader","setLoader","errMsg","setErrMsg","pw","cpw","navigate","profileHandler","event","preventDefault","trim","emailHandler","target","value","newPasswordHandler","length","test","confirmPasswordHandler","layout","loginForm","details","textBox","formLabel","errmsg","save","load"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport NotificationCard from '../../card/notificationCard';\r\nimport preloader from '../../image/sectionLoader.gif';\r\nimport classes from './passwordNew.module.css';\r\n\r\nfunction PasswordNew(props){\r\n\r\n    useEffect(() => {\r\n        document.title = 'Change Password';\r\n    });\r\n\r\n    const [useEmail, setUseEmail] = useState(\" \");\r\n    const [useNewPassword, setUseNewPassword] = useState(\" \");\r\n    const [useConfirmPassword, setUseConfirmPassword] = useState(\" \");\r\n    const [updated, setUpdated] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [errMsg, setErrMsg] = useState({ pw: \"ok\", cpw: \"ok\" });\r\n\r\n    let navigate = useNavigate();\r\n\r\n    async function profileHandler(event){\r\n        event.preventDefault();\r\n        if(useEmail.trim() === \"\" || useNewPassword.trim() === \"\" || useConfirmPassword.trim() === \"\")\r\n            return;\r\n\r\n        setLoader(true);\r\n\r\n\r\n        \r\n    }\r\n    function emailHandler(event){\r\n        setUseEmail(event.target.value);\r\n    }\r\n    function newPasswordHandler(event){\r\n        const pw = event.target.value;\r\n        setUseNewPassword(pw);\r\n\r\n        if(pw.length < 8)\r\n            setErrMsg({ ...errMsg, pw: \"Minimum length must be 8\"});\r\n        else if(/[A-Z]/.test(pw) === false)\r\n            setErrMsg({ ...errMsg, pw: \"Password must have atleast 1 uppercase character\"});\r\n        else if(/\\d/.test(pw) === false)\r\n            setErrMsg({ ...errMsg, pw: \"Password must have atleast 1 numeric character\"});\r\n        else if(/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(pw) === false)\r\n            setErrMsg({ ...errMsg, pw: \"Password must have atleast 1 special character\"});\r\n        else\r\n            setErrMsg({ ...errMsg, pw: \"ok\"});\r\n    }\r\n    function confirmPasswordHandler(event){\r\n        const cpw = event.target.value;\r\n        setUseConfirmPassword(cpw);\r\n\r\n        if(cpw !== useNewPassword)\r\n            setErrMsg({ ...errMsg, cpw: \"This field must be same as your password\"});\r\n        else\r\n            setErrMsg({ ...errMsg, cpw: \"ok\"});\r\n    }\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <form className={classes.loginForm} onSubmit = {profileHandler}>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {emailHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       Email*\r\n                    </label>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {newPasswordHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       New Password*\r\n                    </label>\r\n                    {errMsg.pw !== \"ok\" && <p className={classes.errmsg}>{errMsg.pw}</p>}\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {confirmPasswordHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       Confirm Password*\r\n                    </label>\r\n                    {errMsg.cpw !== \"ok\" && <p className={classes.errmsg}>{errMsg.cpw}</p>}\r\n                </div>\r\n\r\n                <button type= \"submit\" value=\"Submit\" className={classes.save}>CONTINUE</button>\r\n\r\n            </form>\r\n            {updated && <NotificationCard value = {\"Password Updated Successfully\"} />}\r\n            {loader && <img src = {preloader} className={classes.load} alt = \"Loading...\"></img>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordNew;"]},"metadata":{},"sourceType":"module"}