{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\paymentSuccess\\\\paymentSuccess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BadgeCheckIcon from '../../icons/badgeCheckIcon';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addressActions } from '../../store/addressStore';\nimport classes from './paymentSuccess.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentSuccess(props) {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Online Shopping site for shoes in India | Friction';\n  });\n  const bill = localStorage.getItem(\"billStore\") ? JSON.parse(localStorage.getItem(\"billStore\")) : [{\n    amount: 0\n  }];\n  const products = localStorage.getItem(\"products\") ? JSON.parse(localStorage.getItem(\"products\")) : [];\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const login = useSelector(state => state.login.loggedin);\n  const address = useSelector(state => state.address.currAddress);\n  if (!login || address === {}) navigate(`/`, {\n    replace: true\n  });\n  const userSub = useSelector(state => state.login.userData);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    //get orders data mongodb\n    async function getOrders(email) {\n      const res = await fetch(\"/api/user/history-get\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.orders) setOrders(data.orders);\n    }\n\n    getOrders(userSub.email);\n\n    async function postOrders(email, orders) {\n      const cart = [];\n      const bill = [];\n      const res = await fetch(\"/api/user/history-create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          cart,\n          bill,\n          orders\n        })\n      });\n      await res.json();\n    }\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    today = dd + '/' + mm + '/' + yyyy;\n    var currOrder = orders.slice();\n    currOrder.push({\n      order_id: \"\",\n      status: \"processing\",\n      bill: bill,\n      products: products,\n      payment: \"Cash\",\n      address: address,\n      date: today\n    });\n    postOrders(userSub.email, currOrder);\n    dispatch(addressActions.remAddress());\n    navigate(`/orders`, {\n      replace: true\n    });\n  }, [userSub.email, address, dispatch, navigate, orders]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.badge,\n        children: /*#__PURE__*/_jsxDEV(BadgeCheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order Successfull\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentSuccess, \"LHYUZqGVqpbJ8Sgls8xeCsQ4vL4=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n\n_c = PaymentSuccess;\nexport default PaymentSuccess;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/paymentSuccess/paymentSuccess.js"],"names":["React","useState","useEffect","useNavigate","BadgeCheckIcon","useSelector","useDispatch","addressActions","classes","PaymentSuccess","props","document","title","bill","localStorage","getItem","JSON","parse","amount","products","dispatch","navigate","login","state","loggedin","address","currAddress","replace","userSub","userData","orders","setOrders","getOrders","email","res","fetch","method","headers","body","stringify","data","json","ok","postOrders","cart","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","currOrder","slice","push","order_id","status","payment","date","remAddress","layout","badge"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BadgeCheckIcon from '../../icons/badgeCheckIcon';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addressActions } from '../../store/addressStore';\r\nimport classes from './paymentSuccess.module.css';\r\n\r\nfunction PaymentSuccess(props){\r\n\r\n    useEffect(() => {\r\n        document.title = 'Online Shopping site for shoes in India | Friction';\r\n    });\r\n\r\n    const bill = localStorage.getItem(\"billStore\") ? JSON.parse(localStorage.getItem(\"billStore\")) : [{amount: 0}];\r\n    const products = localStorage.getItem(\"products\") ? JSON.parse(localStorage.getItem(\"products\")) : [];\r\n    const dispatch = useDispatch();\r\n\r\n    let navigate = useNavigate();\r\n    const login = useSelector((state) => state.login.loggedin);\r\n    const address = useSelector((state) => state.address.currAddress);\r\n\r\n    if(!login || address === {})\r\n        navigate(`/`, { replace: true });\r\n    \r\n    const userSub = useSelector((state) => state.login.userData);\r\n\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() =>{\r\n\r\n        //get orders data mongodb\r\n        async function getOrders(email){\r\n\r\n            const res = await fetch(\"/api/user/history-get\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email })\r\n            });\r\n        \r\n            const data = await res.json();\r\n                \r\n            if(res.ok && data.orders)\r\n                setOrders(data.orders);\r\n\r\n        }\r\n        getOrders(userSub.email);\r\n\r\n        async function postOrders(email, orders){\r\n\r\n            const cart = [];\r\n            const bill = [];\r\n            const res = await fetch(\"/api/user/history-create\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email, cart, bill, orders })\r\n            });\r\n        \r\n            await res.json();\r\n    \r\n        }\r\n\r\n        var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            var yyyy = today.getFullYear();\r\n\r\n            today = dd + '/' + mm + '/' + yyyy;\r\n\r\n        var currOrder = orders.slice();\r\n            currOrder.push({\r\n                order_id: \"\",\r\n                status: \"processing\",\r\n                bill: bill,\r\n                products: products,\r\n                payment: \"Cash\",\r\n                address: address,\r\n                date: today\r\n            });\r\n\r\n        postOrders(userSub.email, currOrder);\r\n\r\n        dispatch(addressActions.remAddress());\r\n\r\n        navigate(`/orders`, { replace: true });\r\n\r\n    }, [userSub.email, address, dispatch, navigate, orders]);\r\n\r\n\r\n    return(\r\n        <div className={classes.layout}>\r\n            <div><span className={classes.badge}><BadgeCheckIcon /></span></div>\r\n            <p>Order Successfull</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentSuccess;"]},"metadata":{},"sourceType":"module"}