{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { SetCookie, RemoveCookie } from \"../hooks/cookies\";\nconst initialLoginState = {\n  token: \"\",\n  userData: {},\n  loggedin: false\n};\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState: initialLoginState,\n  reducers: {\n    login(state, action) {\n      localStorage.removeItem(\"products\");\n      localStorage.removeItem(\"billStore\");\n      const user = action.payload;\n      state.token = user.token;\n      state.userData = {\n        _id: user._id,\n        name: user.name,\n        mobile: user.mobile,\n        email: user.email,\n        gender: user.gender,\n        isAdmin: user.isAdmin\n      };\n      state.loggedin = true;\n      SetCookie(\"token\", user.token);\n    },\n\n    logout(state) {\n      state.token = \"\";\n      state.userData = {};\n      state.loggedin = false;\n      RemoveCookie(\"token\");\n      localStorage.removeItem(\"products\");\n      localStorage.removeItem(\"billStore\");\n    },\n\n    loginVerify(state, action) {\n      const user = action.payload;\n      state.token = user.token;\n      state.userData = user.userData;\n      state.loggedin = user.loggedin;\n    }\n\n  }\n});\nexport const loginActions = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/store/loginStore.js"],"names":["createSlice","SetCookie","RemoveCookie","initialLoginState","token","userData","loggedin","loginSlice","name","initialState","reducers","login","state","action","localStorage","removeItem","user","payload","_id","mobile","email","gender","isAdmin","logout","loginVerify","loginActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,QAAQ,EAAE,EAFY;AAGtBC,EAAAA,QAAQ,EAAE;AAHY,CAA1B;AAMA,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAC3BQ,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAEN,iBAFa;AAG3BO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAe;AAChBC,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AACAL,MAAAA,KAAK,CAACR,KAAN,GAAcY,IAAI,CAACZ,KAAnB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiB;AACba,QAAAA,GAAG,EAAEF,IAAI,CAACE,GADG;AAEbV,QAAAA,IAAI,EAAEQ,IAAI,CAACR,IAFE;AAGbW,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAHA;AAIbC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJC;AAKbC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MALA;AAMbC,QAAAA,OAAO,EAAEN,IAAI,CAACM;AAND,OAAjB;AAQAV,MAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACAL,MAAAA,SAAS,CAAC,OAAD,EAAUe,IAAI,CAACZ,KAAf,CAAT;AACH,KAhBK;;AAiBNmB,IAAAA,MAAM,CAACX,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiB,EAAjB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiB,KAAjB;AACAJ,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAY,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,KAxBK;;AAyBNS,IAAAA,WAAW,CAACZ,KAAD,EAAQC,MAAR,EAAe;AACtB,YAAMG,IAAI,GAAGH,MAAM,CAACI,OAApB;AACAL,MAAAA,KAAK,CAACR,KAAN,GAAcY,IAAI,CAACZ,KAAnB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiBW,IAAI,CAACX,QAAtB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiBU,IAAI,CAACV,QAAtB;AACH;;AA9BK;AAHiB,CAAD,CAA9B;AAuCA,OAAO,MAAMmB,YAAY,GAAGlB,UAAU,CAACmB,OAAhC;AAEP,eAAenB,UAAU,CAACoB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { SetCookie, RemoveCookie } from \"../hooks/cookies\";\r\n\r\nconst initialLoginState = {\r\n    token: \"\", \r\n    userData: {}, \r\n    loggedin: false\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: initialLoginState,\r\n    reducers: {\r\n        login(state, action){\r\n            localStorage.removeItem(\"products\");\r\n            localStorage.removeItem(\"billStore\");\r\n            const user = action.payload;\r\n            state.token = user.token;\r\n            state.userData = {\r\n                _id: user._id,\r\n                name: user.name,\r\n                mobile: user.mobile,\r\n                email: user.email,\r\n                gender: user.gender,\r\n                isAdmin: user.isAdmin\r\n            };\r\n            state.loggedin = true;\r\n            SetCookie(\"token\", user.token);\r\n        },\r\n        logout(state){\r\n            state.token = \"\";\r\n            state.userData = {};\r\n            state.loggedin = false;\r\n            RemoveCookie(\"token\");\r\n            localStorage.removeItem(\"products\");\r\n            localStorage.removeItem(\"billStore\");\r\n        },\r\n        loginVerify(state, action){\r\n            const user = action.payload;\r\n            state.token = user.token;\r\n            state.userData = user.userData;\r\n            state.loggedin = user.loggedin;\r\n        }\r\n    },\r\n});\r\n\r\n\r\n\r\nexport const loginActions = loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;"]},"metadata":{},"sourceType":"module"}