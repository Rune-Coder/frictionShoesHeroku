{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\orderView\\\\orderView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport OrderProductCard from '../../card/orderProductCard';\nimport loader from '../../image/sectionLoader.gif';\nimport classes from './orderView.module.css';\nimport PhoneIcon from '../../icons/phoneIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderView(props) {\n  _s();\n\n  const {\n    oid\n  } = useParams();\n  const userSub = useSelector(state => state.login.userData);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    document.title = 'Order Details';\n  });\n  useEffect(() => {\n    //get orders data mongodb\n    async function getOrders(email) {\n      const res = await fetch(\"/api/user/history-get\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.orders) setOrders(data.orders);\n    }\n\n    getOrders(userSub.email);\n  }, [userSub.email]);\n\n  if (orders.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.load,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  const currOrder = orders.find(item => item.order_id === oid);\n\n  if (!currOrder) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.load,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  const [dd, mm, yyyy] = currOrder.date.split(\"/\");\n  const month = [\"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const productList = currOrder.products.map(shoe => /*#__PURE__*/_jsxDEV(OrderProductCard, {\n    id: shoe._id,\n    image: shoe.image,\n    company: shoe.company,\n    product: shoe.product,\n    rating: shoe.rating,\n    sp: shoe.sp,\n    mrp: shoe.mrp,\n    discount: shoe.discount,\n    quantity: shoe.quantity,\n    size: shoe.sz\n  }, shoe._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.head,\n          children: \"Placed On:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this), \"\\xA0\\xA0\", dd, \"\\xA0\", month[Number(mm)], \"\\xA0\", yyyy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.head,\n          children: \"Order No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this), \"\\xA0\\xA0\", oid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.head,\n          children: \"Total Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this), \"\\xA0\\u20B9\\xA0\", currOrder.bill[0].amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.head,\n        children: \"Contact Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 20\n        }, this), currOrder.address.mob]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.head,\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.name,\n        children: currOrder.address.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currOrder.address.house, \",\\xA0\\xA0\", currOrder.address.town]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currOrder.address.city, \",\\xA0\\xA0\", currOrder.address.state, \"\\xA0-\\xA0\", currOrder.address.pin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.head,\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currOrder.payment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), productList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderView, \"DbPw/TH1reQXxpeS8PrDkCzQC38=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = OrderView;\nexport default OrderView;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderView\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/orderView/orderView.js"],"names":["React","useState","useEffect","useParams","useSelector","OrderProductCard","loader","classes","PhoneIcon","OrderView","props","oid","userSub","state","login","userData","orders","setOrders","document","title","getOrders","email","res","fetch","method","headers","body","JSON","stringify","data","json","ok","length","load","currOrder","find","item","order_id","dd","mm","yyyy","date","split","month","productList","products","map","shoe","_id","image","company","product","rating","sp","mrp","discount","quantity","sz","layout","head","Number","bill","amount","address","mob","name","house","town","city","pin","payment"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport OrderProductCard from '../../card/orderProductCard';\r\nimport loader from '../../image/sectionLoader.gif';\r\nimport classes from './orderView.module.css';\r\nimport PhoneIcon from '../../icons/phoneIcon';\r\n\r\nfunction OrderView(props){\r\n    const {oid} = useParams();\r\n    const userSub = useSelector((state) => state.login.userData);\r\n\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Order Details';\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        //get orders data mongodb\r\n        async function getOrders(email){\r\n\r\n            const res = await fetch(\"/api/user/history-get\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email })\r\n            });\r\n        \r\n            const data = await res.json();\r\n                \r\n            if(res.ok && data.orders)\r\n                setOrders(data.orders);\r\n\r\n        }\r\n        getOrders(userSub.email);\r\n\r\n    }, [userSub.email]);\r\n\r\n    if(orders.length === 0){\r\n        return(\r\n            <div className={classes.load}>\r\n                <img src = {loader} alt = \"Loading...\"></img>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currOrder = orders.find(item => item.order_id === oid);\r\n\r\n    if(!currOrder){\r\n        return(\r\n            <div className={classes.load}>\r\n                <img src = {loader} alt = \"Loading...\"></img>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const [dd, mm, yyyy] = currOrder.date.split(\"/\");\r\n    const month = [\"\", \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\n\r\n    const productList = currOrder.products.map((shoe) => (\r\n        <OrderProductCard \r\n            key = {shoe._id} \r\n            id = {shoe._id}\r\n            image = {shoe.image}\r\n            company = {shoe.company} \r\n            product = {shoe.product} \r\n            rating = {shoe.rating} \r\n            sp = {shoe.sp} \r\n            mrp = {shoe.mrp} \r\n            discount = {shoe.discount}\r\n            quantity = {shoe.quantity}\r\n            size = {shoe.sz}\r\n        />\r\n    ));\r\n\r\n    return(\r\n        <div className={classes.layout}>\r\n            <div>\r\n                <p><span className={classes.head}>Placed On:</span>&nbsp;&nbsp;{dd}&nbsp;{month[Number(mm)]}&nbsp;{yyyy}</p>\r\n                <p><span className={classes.head}>Order No:</span>&nbsp;&nbsp;{oid}</p>\r\n                <p><span className={classes.head}>Total Amount:</span>&nbsp;&#8377;&nbsp;{currOrder.bill[0].amount}</p>\r\n            </div>\r\n            <div>\r\n                <p className={classes.head}>Contact Details</p>\r\n                \r\n                <p><PhoneIcon />{currOrder.address.mob}</p>\r\n            </div>\r\n            <div>\r\n                <p className={classes.head}>Shipping Address</p>\r\n                <p className={classes.name}>{currOrder.address.name}</p>\r\n                <p>{currOrder.address.house},&nbsp;&nbsp;{currOrder.address.town}</p>\r\n                <p>{currOrder.address.city},&nbsp;&nbsp;{currOrder.address.state}&nbsp;-&nbsp;{currOrder.address.pin}</p>\r\n            </div>\r\n            <div>\r\n                <p className={classes.head}>Payment Method</p>\r\n                <p>{currOrder.payment}</p>\r\n            </div>\r\n            {productList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderView;"]},"metadata":{},"sourceType":"module"}