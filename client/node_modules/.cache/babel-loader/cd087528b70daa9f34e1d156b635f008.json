{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction UserHistory(token) {\n  _s();\n\n  const [user, setUser] = useState({});\n  var loggedin = true;\n  var newtoken = token;\n  useEffect(() => {\n    async function getData() {\n      const res = await fetch(`/api/user/profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${newtoken}`\n        }\n      });\n      const data = await res.json();\n      if (res.ok) setUser(data);\n    }\n\n    getData();\n  }, [newtoken]);\n\n  if (Object.keys(user).length === 0) {\n    token = \"\";\n    loggedin = false;\n  }\n\n  if (!loggedin) return; //post cart data mongodb\n\n  async function getCartData(email) {\n    const res = await fetch(\"/api/user/history-get\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) return;\n\n    if (data.cart && data.bill) {\n      localStorage.setItem(\"products\", JSON.stringify(data.cart));\n      localStorage.setItem(\"billStore\", JSON.stringify(data.bill));\n    }\n  }\n\n  getCartData(user.email);\n}\n\n_s(UserHistory, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\n_c = UserHistory;\nexport { UserHistory };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserHistory\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/connect/userHistory.js"],"names":["useState","useEffect","UserHistory","token","user","setUser","loggedin","newtoken","getData","res","fetch","method","headers","Authorization","data","json","ok","Object","keys","length","getCartData","email","body","JSON","stringify","cart","bill","localStorage","setItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIM,QAAQ,GAAG,IAAf;AACA,MAAIC,QAAQ,GAAGJ,KAAf;AAEAF,EAAAA,SAAS,CAAC,MAAK;AACX,mBAAeO,OAAf,GAAwB;AAEpB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,mBAAF,EAAsB;AACzCC,QAAAA,MAAM,EAAE,KADiC;AAEzCC,QAAAA,OAAO,EAAC;AACJC,UAAAA,aAAa,EAAG,UAASN,QAAS;AAD9B;AAFiC,OAAtB,CAAvB;AAOA,YAAMO,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AAEA,UAAGN,GAAG,CAACO,EAAP,EACIX,OAAO,CAACS,IAAD,CAAP;AAEP;;AAEDN,IAAAA,OAAO;AAEV,GAnBQ,EAmBN,CAACD,QAAD,CAnBM,CAAT;;AAsBA,MAAGU,MAAM,CAACC,IAAP,CAAYd,IAAZ,EAAkBe,MAAlB,KAA6B,CAAhC,EAAkC;AAC9BhB,IAAAA,KAAK,GAAG,EAAR;AACAG,IAAAA,QAAQ,GAAG,KAAX;AACH;;AAED,MAAG,CAACA,QAAJ,EACI,OAjCmB,CAmCvB;;AACA,iBAAec,WAAf,CAA2BC,KAA3B,EAAiC;AAE7B,UAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAD,EAA0B;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAC;AACJ,wBAAgB;AADZ,OAFqC;AAK7CU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA;AAAF,OAAf;AALuC,KAA1B,CAAvB;AAQA,UAAMP,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AAEA,QAAG,CAACN,GAAG,CAACO,EAAR,EACI;;AAGJ,QAAGF,IAAI,CAACW,IAAL,IAAaX,IAAI,CAACY,IAArB,EAA0B;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACW,IAApB,CAAjC;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACY,IAApB,CAAlC;AACH;AAEJ;;AAEDN,EAAAA,WAAW,CAAChB,IAAI,CAACiB,KAAN,CAAX;AACH;;GA5DQnB,W;;KAAAA,W;AA8DT,SAASA,WAAT","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction UserHistory(token){\r\n    const [user, setUser] = useState({});\r\n    var loggedin = true;\r\n    var newtoken = token;\r\n\r\n    useEffect(() =>{\r\n        async function getData(){\r\n    \r\n            const res = await fetch(`/api/user/profile`, {\r\n                method: \"GET\",\r\n                headers:{\r\n                    Authorization: `Bearer ${newtoken}`\r\n                }\r\n            });\r\n        \r\n            const data = await res.json();\r\n            \r\n            if(res.ok)\r\n                setUser(data);\r\n    \r\n        }\r\n\r\n        getData();\r\n\r\n    }, [newtoken]);\r\n\r\n    \r\n    if(Object.keys(user).length === 0){\r\n        token = \"\";\r\n        loggedin = false;\r\n    }\r\n\r\n    if(!loggedin)\r\n        return;\r\n    \r\n    //post cart data mongodb\r\n    async function getCartData(email){\r\n\r\n        const res = await fetch(\"/api/user/history-get\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })\r\n        });\r\n    \r\n        const data = await res.json();\r\n\r\n        if(!res.ok)\r\n            return;\r\n        \r\n        \r\n        if(data.cart && data.bill){\r\n            localStorage.setItem(\"products\", JSON.stringify(data.cart));\r\n            localStorage.setItem(\"billStore\", JSON.stringify(data.bill));\r\n        }\r\n\r\n    }\r\n\r\n    getCartData(user.email);\r\n}\r\n\r\nexport { UserHistory };"]},"metadata":{},"sourceType":"module"}