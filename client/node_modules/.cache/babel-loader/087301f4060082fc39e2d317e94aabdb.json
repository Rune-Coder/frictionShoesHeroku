{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { SetCookie, GetCookie, RemoveCookie } from \"../hooks/cookies\";\n\nasync function getData(token) {\n  const res = await fetch(`/api/user/profile`, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await res.json();\n  console.log(data);\n  if (!res.ok) return {};\n  return data;\n}\n\nconst initialLoginState = {\n  token: GetCookie(\"token\") ? GetCookie(\"token\") : \"\",\n\n  get userData() {\n    return this.token !== \"\" ? getData(this.token) : {};\n  },\n\n  get loggedin() {\n    return this.userData !== {};\n  }\n\n};\nconsole.log(initialLoginState.userData);\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState: initialLoginState,\n  reducers: {\n    login(state, action) {\n      const user = action.payload;\n      state.token = user.token;\n      state.userData = {\n        _id: user._id,\n        name: user.name,\n        mobile: user.mobile,\n        email: user.email,\n        gender: user.gender,\n        isAdmin: user.isAdmin\n      };\n      state.loggedin = true;\n      SetCookie(\"token\", user.token);\n      localStorage.removeItem(\"products\");\n      localStorage.removeItem(\"billStore\");\n    },\n\n    logout(state) {\n      state.token = \"\";\n      state.userData = {};\n      state.loggedin = false;\n      RemoveCookie(\"token\");\n    }\n\n  }\n});\nexport const loginActions = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/store/loginStore.js"],"names":["createSlice","SetCookie","GetCookie","RemoveCookie","getData","token","res","fetch","method","headers","Authorization","data","json","console","log","ok","initialLoginState","userData","loggedin","loginSlice","name","initialState","reducers","login","state","action","user","payload","_id","mobile","email","gender","isAdmin","localStorage","removeItem","logout","loginActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,kBAAnD;;AAEA,eAAeC,OAAf,CAAuBC,KAAvB,EAA6B;AACzB,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,mBAAF,EAAsB;AACzCC,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,OAAO,EAAC;AACJC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAD3B;AAFiC,GAAtB,CAAvB;AAOA,QAAMM,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAG,CAACL,GAAG,CAACS,EAAR,EACI,OAAO,EAAP;AACJ,SAAOJ,IAAP;AAEH;;AAED,MAAMK,iBAAiB,GAAG;AACtBX,EAAAA,KAAK,EAAEH,SAAS,CAAC,OAAD,CAAT,GAAqBA,SAAS,CAAC,OAAD,CAA9B,GAA0C,EAD3B;;AAEtB,MAAIe,QAAJ,GAAc;AAAE,WAAQ,KAAKZ,KAAL,KAAe,EAAf,GAAoBD,OAAO,CAAC,KAAKC,KAAN,CAA3B,GAA0C,EAAlD;AAAuD,GAFjD;;AAGtB,MAAIa,QAAJ,GAAc;AAAE,WAAQ,KAAKD,QAAL,KAAkB,EAA1B;AAA+B;;AAHzB,CAA1B;AAMAJ,OAAO,CAACC,GAAR,CAAYE,iBAAiB,CAACC,QAA9B;AAEA,MAAME,UAAU,GAAGnB,WAAW,CAAC;AAC3BoB,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAEL,iBAFa;AAG3BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAe;AAChB,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACnB,KAAN,GAAcqB,IAAI,CAACrB,KAAnB;AACAmB,MAAAA,KAAK,CAACP,QAAN,GAAiB;AACbW,QAAAA,GAAG,EAAEF,IAAI,CAACE,GADG;AAEbR,QAAAA,IAAI,EAAEM,IAAI,CAACN,IAFE;AAGbS,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAHA;AAIbC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJC;AAKbC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MALA;AAMbC,QAAAA,OAAO,EAAEN,IAAI,CAACM;AAND,OAAjB;AAQAR,MAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACAjB,MAAAA,SAAS,CAAC,OAAD,EAAUyB,IAAI,CAACrB,KAAf,CAAT;AACA4B,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,KAhBK;;AAiBNC,IAAAA,MAAM,CAACX,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACnB,KAAN,GAAc,EAAd;AACAmB,MAAAA,KAAK,CAACP,QAAN,GAAiB,EAAjB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiB,KAAjB;AACAf,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACH;;AAtBK;AAHiB,CAAD,CAA9B;AA6BA,OAAO,MAAMiC,YAAY,GAAGjB,UAAU,CAACkB,OAAhC;AAEP,eAAelB,UAAU,CAACmB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { SetCookie, GetCookie, RemoveCookie } from \"../hooks/cookies\";\r\n\r\nasync function getData(token){\r\n    const res = await fetch(`/api/user/profile`, {\r\n        method: \"GET\",\r\n        headers:{\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n    if(!res.ok)\r\n        return {};\r\n    return data;\r\n    \r\n}\r\n\r\nconst initialLoginState = {\r\n    token: GetCookie(\"token\") ? GetCookie(\"token\") : \"\", \r\n    get userData(){ return (this.token !== \"\" ? getData(this.token) : {}) }, \r\n    get loggedin(){ return (this.userData !== {}) }\r\n};\r\n\r\nconsole.log(initialLoginState.userData);\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: initialLoginState,\r\n    reducers: {\r\n        login(state, action){\r\n            const user = action.payload;\r\n            state.token = user.token;\r\n            state.userData = {\r\n                _id: user._id,\r\n                name: user.name,\r\n                mobile: user.mobile,\r\n                email: user.email,\r\n                gender: user.gender,\r\n                isAdmin: user.isAdmin\r\n            };\r\n            state.loggedin = true;\r\n            SetCookie(\"token\", user.token);\r\n            localStorage.removeItem(\"products\");\r\n            localStorage.removeItem(\"billStore\");\r\n        },\r\n        logout(state){\r\n            state.token = \"\";\r\n            state.userData = {};\r\n            state.loggedin = false;\r\n            RemoveCookie(\"token\");\r\n        }\r\n    },\r\n});\r\n\r\nexport const loginActions = loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;"]},"metadata":{},"sourceType":"module"}