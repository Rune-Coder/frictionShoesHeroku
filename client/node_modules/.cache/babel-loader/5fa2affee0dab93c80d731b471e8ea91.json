{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\address\\\\addressForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginActions } from '../../store/loginStore';\nimport classes from './addressForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddressForm(props) {\n  _s();\n\n  const userSub = useSelector(state => state.login.userData);\n  const dispatch = useDispatch();\n  const msg = {\n    mobNo: \"ok\",\n    pinCode: \"ok\"\n  };\n  const [name, setName] = useState(\" \");\n  const [mob, setMob] = useState(\" \");\n  const [pin, setPin] = useState(\" \");\n  const [house, setHouse] = useState(\" \");\n  const [town, setTown] = useState(\" \");\n  const [landmark, setLandmark] = useState(\" \");\n  const [city, setCity] = useState(\" \");\n  const [state, setState] = useState(\" \");\n  const [errMsg, setErrMsg] = useState(msg);\n  const [addr, setAddr] = useState([]);\n  useEffect(() => {\n    //post cart data mongodb\n    async function getAddress(email) {\n      const res = await fetch(\"/api/user/history-get\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.address) setAddr(data.address);\n    }\n\n    getAddress(userSub.email);\n  }, [userSub.email]); //post address\n\n  async function postAddress(email, address) {\n    const res = await fetch(\"/api/user/history-create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        address\n      })\n    });\n    await res.json();\n  }\n\n  function addressSave(event) {\n    event.preventDefault();\n    if (errMsg.mobNo !== \"ok\" || errMsg.pinCode !== \"ok\") return;\n    console.log(name + \" \" + mob + \" \" + pin + \" \" + house + \" \" + town + \" \" + landmark + \" \" + city + \" \" + state);\n    let newAddress = addr.slice();\n    const id = \"a\" + newAddress.length;\n    newAddress.push({\n      _id: id,\n      name: name,\n      mobile: mob,\n      house: house,\n      town: town,\n      landmark: landmark,\n      city: city,\n      state: state,\n      pin: pin\n    });\n    postAddress(userSub.email, newAddress);\n    dispatch(loginActions.addAddress({\n      name: name,\n      mobile: mob,\n      house: house,\n      town: town,\n      landmark: landmark,\n      city: city,\n      state: state,\n      pin: pin\n    }));\n  }\n\n  function nameHandler(event) {\n    setName(event.target.value);\n  }\n\n  function mobHandler(event) {\n    const contact = event.target.value;\n\n    if (contact === \"\") {\n      setErrMsg({ ...errMsg,\n        mobNo: \"This is a mandatory field\"\n      });\n      return;\n    }\n\n    setMob(contact);\n    if (contact.length < 10) setErrMsg({ ...errMsg,\n      mobNo: \"Minimum length is 10\"\n    });else if (/^\\d+$/.test(contact) === false || contact.charAt(0) < 6) setErrMsg({ ...errMsg,\n      mobNo: \"Please enter a valid 10 digit mobile number\"\n    });else setErrMsg({ ...errMsg,\n      mobNo: \"ok\"\n    });\n  }\n\n  async function pinHandler(event) {\n    const code = event.target.value;\n\n    if (code === \"\") {\n      setErrMsg({ ...errMsg,\n        pinCode: \"This is a mandatory field\"\n      });\n      return;\n    }\n\n    setPin(code);\n    let data;\n\n    try {\n      const res = await fetch(`/api/user/getPinData/${code}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      data = await res.json();\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n\n    if (data.Status === \"Error\" || data.PostOffice === null) {\n      setErrMsg({ ...errMsg,\n        pinCode: \"Invalid pincode\"\n      });\n      return;\n    }\n\n    setErrMsg({ ...errMsg,\n      pinCode: \"ok\"\n    });\n    setCity(data.PostOffice[0].Taluk);\n    setState(data.PostOffice[0].State);\n  }\n\n  function houseHandler(event) {\n    setHouse(event.target.value);\n  }\n\n  function townHandler(event) {\n    setTown(event.target.value);\n  }\n\n  function landmarkHandler(event) {\n    setLandmark(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addressSave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.con,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.head,\n        children: \"CONTACT DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: nameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Name*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          maxlength: \"10\",\n          required: true,\n          className: classes.textBox,\n          onBlur: mobHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Mobile No*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), errMsg.mobNo !== \"ok\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errmsg,\n          children: errMsg.mobNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.add,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.head,\n        children: \"ADDRESS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          maxlength: \"6\",\n          required: true,\n          className: classes.textBox,\n          onBlur: pinHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Pin Code*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), errMsg.pinCode !== \"ok\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.errmsg,\n          children: errMsg.pinCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: houseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Address(House No, Building, Street, Area)*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: townHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Locality/Town*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          className: classes.textBox,\n          onBlur: landmarkHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Landmark (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [city === \" \" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fixed,\n          children: \"City/District*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 38\n        }, this), city !== \" \" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fixed,\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [state === \" \" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fixed,\n          children: \"State*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 39\n        }, this), state !== \" \" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fixed,\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: classes.save,\n      children: \"ADD ADDRESS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddressForm, \"Xhw+T6kYSA5k+gq/uAWMxD+m/Yg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/address/addressForm.js"],"names":["React","useState","useEffect","useSelector","useDispatch","loginActions","classes","AddressForm","props","userSub","state","login","userData","dispatch","msg","mobNo","pinCode","name","setName","mob","setMob","pin","setPin","house","setHouse","town","setTown","landmark","setLandmark","city","setCity","setState","errMsg","setErrMsg","addr","setAddr","getAddress","email","res","fetch","method","headers","body","JSON","stringify","data","json","ok","address","postAddress","addressSave","event","preventDefault","console","log","newAddress","slice","id","length","push","_id","mobile","addAddress","nameHandler","target","value","mobHandler","contact","test","charAt","pinHandler","code","error","Status","PostOffice","Taluk","State","houseHandler","townHandler","landmarkHandler","con","head","details","textBox","formLabel","errmsg","add","fixed","save"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loginActions } from '../../store/loginStore';\r\nimport classes from './addressForm.module.css';\r\n\r\nfunction AddressForm(props){\r\n\r\n    const userSub = useSelector((state) => state.login.userData);\r\n    const dispatch = useDispatch();\r\n    const msg = {mobNo: \"ok\", pinCode: \"ok\"};\r\n\r\n    const [name, setName] = useState(\" \");\r\n    const [mob, setMob] = useState(\" \");\r\n    const [pin, setPin] = useState(\" \");\r\n    const [house, setHouse] = useState(\" \");\r\n    const [town, setTown] = useState(\" \");\r\n    const [landmark, setLandmark] = useState(\" \");\r\n    const [city, setCity] = useState(\" \");\r\n    const [state, setState] = useState(\" \");\r\n    const [errMsg, setErrMsg] = useState(msg);\r\n    const [addr, setAddr] = useState([]);\r\n\r\n    useEffect(() =>{\r\n\r\n        //post cart data mongodb\r\n        async function getAddress(email){\r\n\r\n            const res = await fetch(\"/api/user/history-get\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email })\r\n            });\r\n        \r\n            const data = await res.json();\r\n                \r\n            if(res.ok && data.address)\r\n                setAddr(data.address);\r\n\r\n        }\r\n        getAddress(userSub.email);\r\n\r\n    }, [userSub.email]);\r\n\r\n    //post address\r\n    async function postAddress(email, address){\r\n\r\n        const res = await fetch(\"/api/user/history-create\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email, address })\r\n        });\r\n    \r\n        await res.json();\r\n\r\n    }\r\n\r\n    function addressSave(event){  \r\n        event.preventDefault();\r\n\r\n        if(errMsg.mobNo !== \"ok\" || errMsg.pinCode !== \"ok\")\r\n            return;\r\n        \r\n        console.log(name +\" \"+ mob+\" \"+ pin +\" \"+ house +\" \"+ town+\" \"+ landmark +\" \"+ city +\" \"+ state);\r\n\r\n        let newAddress = addr.slice();\r\n\r\n        const id = \"a\"+newAddress.length;\r\n        newAddress.push({\r\n            _id: id,\r\n            name : name,\r\n            mobile : mob,\r\n            house : house ,\r\n            town : town,\r\n            landmark: landmark,\r\n            city : city,\r\n            state : state,\r\n            pin : pin\r\n        });\r\n\r\n        postAddress(userSub.email, newAddress);\r\n\r\n        dispatch(loginActions.addAddress({\r\n            name : name,\r\n            mobile : mob,\r\n            house : house ,\r\n            town : town,\r\n            landmark: landmark,\r\n            city : city,\r\n            state : state,\r\n            pin : pin\r\n        }));\r\n\r\n        \r\n    }\r\n\r\n    function nameHandler(event){\r\n        setName(event.target.value);\r\n    }\r\n    function mobHandler(event){\r\n        const contact = event.target.value;\r\n        if(contact === \"\"){\r\n            setErrMsg({ ...errMsg, mobNo: \"This is a mandatory field\"});\r\n            return;\r\n        }\r\n\r\n        setMob(contact);  \r\n        \r\n        if(contact.length < 10)\r\n            setErrMsg({ ...errMsg, mobNo: \"Minimum length is 10\"});\r\n        else if(/^\\d+$/.test(contact) === false || contact.charAt(0) < 6)\r\n            setErrMsg({ ...errMsg, mobNo: \"Please enter a valid 10 digit mobile number\"});\r\n        else\r\n            setErrMsg({ ...errMsg, mobNo: \"ok\"});\r\n    }\r\n    async function pinHandler(event){\r\n        const code = event.target.value;\r\n        if(code === \"\"){\r\n            setErrMsg({ ...errMsg, pinCode: \"This is a mandatory field\"});\r\n            return;\r\n        }\r\n            \r\n        setPin(code); \r\n\r\n        let data;\r\n\r\n        try{\r\n            const res = await fetch(`/api/user/getPinData/${code}`, {\r\n                method: \"GET\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            });\r\n            data = await res.json();\r\n            \r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            return;\r\n        }\r\n\r\n        if(data.Status === \"Error\" || data.PostOffice === null){\r\n            setErrMsg({ ...errMsg, pinCode: \"Invalid pincode\"});\r\n            return;\r\n        }\r\n        \r\n        setErrMsg({ ...errMsg, pinCode: \"ok\"});\r\n\r\n        setCity(data.PostOffice[0].Taluk);\r\n        setState(data.PostOffice[0].State);\r\n\r\n        \r\n    }\r\n    function houseHandler(event){\r\n        setHouse(event.target.value);\r\n    }\r\n    function townHandler(event){\r\n        setTown(event.target.value);\r\n    }\r\n    function landmarkHandler(event){\r\n        setLandmark(event.target.value);\r\n    }\r\n\r\n\r\n    return(\r\n        <form onSubmit={addressSave}>\r\n            <div className={classes.con}>\r\n                <p className={classes.head}>CONTACT DETAILS</p>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {nameHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                        Name*\r\n                    </label>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        maxlength=\"10\" \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {mobHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                        Mobile No*\r\n                    </label>\r\n                    {errMsg.mobNo !== \"ok\" && <p className={classes.errmsg}>{errMsg.mobNo}</p>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.add}>\r\n                <p className={classes.head}>ADDRESS</p>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        maxlength=\"6\" \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {pinHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                        Pin Code*\r\n                    </label>\r\n                    {errMsg.pinCode !== \"ok\" && <p className={classes.errmsg}>{errMsg.pinCode}</p>}\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' '  \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {houseHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                        Address(House No, Building, Street, Area)*\r\n                    </label>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' '  \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {townHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                        Locality/Town*\r\n                    </label>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' '  \r\n                        className={classes.textBox}\r\n                        onBlur = {landmarkHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                        Landmark (optional)\r\n                    </label>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    {city === \" \" && <div className={classes.fixed}>City/District*</div>}\r\n                    {city !== \" \" && <div className={classes.fixed}>{city}</div>}\r\n                </div>\r\n                <div className={classes.details}>\r\n                    {state === \" \" && <div className={classes.fixed}>State*</div>}\r\n                    {state !== \" \" && <div className={classes.fixed}>{state}</div>}\r\n                </div>\r\n            </div>\r\n            <button type= \"submit\" value=\"Submit\" className={classes.save}>ADD ADDRESS</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}