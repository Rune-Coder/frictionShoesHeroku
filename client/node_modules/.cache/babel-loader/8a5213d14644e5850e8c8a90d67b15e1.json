{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\profile\\\\profileEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GetCookie } from '../../hooks/cookies';\nimport NotificationCard from '../../card/notificationCard';\nimport preloader from '../../image/sectionLoader.gif';\nimport classes from './profileEdit.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileEdit(props) {\n  _s();\n\n  const [useName, setUseName] = useState(\" \");\n  const [useGen, setUseGen] = useState(\" \");\n  const [user, setUser] = useState({});\n  let navigate = useNavigate();\n\n  async function loginHandler(event) {\n    if (useName.trim() === \"\" || useGen.trim() === \"\") return;\n\n    async function getData(token) {\n      const res = await fetch(`/api/user/profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await res.json();\n      if (res.ok) setUser(data);else navigate(`/login`, {\n        replace: true\n      });\n    }\n\n    getData(GetCookie(\"token\"));\n    if (user === {}) return;\n    const email = user.email;\n    const res = await fetch(\"/update-profile\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        name: useName,\n        gender: useGen\n      })\n    });\n    await res.json();\n\n    if (res.ok) {}\n  }\n\n  function nameHandler(event) {\n    setUseName(event.target.value);\n  }\n\n  function genHandler(event) {\n    var gen;\n\n    if (document.getElementById('gen1').checked) {\n      gen = document.getElementById('gen1').value;\n      setUseGen(gen);\n    } else if (document.getElementById('gen2').checked) {\n      gen = document.getElementById('gen2').value;\n      setUseGen(gen);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      className: classes.loginForm,\n      onSubmit: loginHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" \",\n          required: true,\n          className: classes.textBox,\n          onBlur: nameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.formLabel,\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.gen,\n        onClick: genHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select Gender:\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"gen1\",\n          name: \"gender\",\n          value: \"Female\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"gen1\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"gen2\",\n          name: \"gender\",\n          value: \"Male\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"gen2\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: classes.save,\n        children: \"SAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileEdit, \"/j1SoA9ccXueMfnXoDjrNaifCX4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProfileEdit;\nexport default ProfileEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/profile/profileEdit.js"],"names":["React","useState","useNavigate","GetCookie","NotificationCard","preloader","classes","ProfileEdit","props","useName","setUseName","useGen","setUseGen","user","setUser","navigate","loginHandler","event","trim","getData","token","res","fetch","method","headers","Authorization","data","json","ok","replace","email","body","JSON","stringify","name","gender","nameHandler","target","value","genHandler","gen","document","getElementById","checked","layout","loginForm","details","textBox","formLabel","save"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GetCookie } from '../../hooks/cookies';\r\nimport NotificationCard from '../../card/notificationCard';\r\nimport preloader from '../../image/sectionLoader.gif';\r\nimport classes from './profileEdit.module.css';\r\n\r\nfunction ProfileEdit(props){\r\n\r\n    const [useName, setUseName] = useState(\" \");\r\n    const [useGen, setUseGen] = useState(\" \");\r\n    const [user, setUser] = useState({});\r\n\r\n    let navigate = useNavigate();\r\n\r\n    async function loginHandler(event){\r\n        if(useName.trim() === \"\" || useGen.trim() === \"\")\r\n            return;\r\n\r\n        async function getData(token){\r\n\r\n            const res = await fetch(`/api/user/profile`, {\r\n                method: \"GET\",\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n        \r\n            const data = await res.json();\r\n            \r\n            if(res.ok)\r\n                setUser(data);\r\n            else\r\n                navigate(`/login`, { replace: true });  \r\n    \r\n        }\r\n\r\n        getData(GetCookie(\"token\"));\r\n\r\n        if(user === {})\r\n            return;\r\n\r\n        const email = user.email;\r\n\r\n        const res = await fetch(\"/update-profile\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email: email, name: useName, gender: useGen  })\r\n        });\r\n    \r\n        await res.json();\r\n            \r\n        if(res.ok){\r\n\r\n        }\r\n        \r\n    }\r\n    function nameHandler(event){\r\n        setUseName(event.target.value);\r\n    }\r\n    function genHandler(event){\r\n        var gen;\r\n        if (document.getElementById('gen1').checked) {\r\n            gen = document.getElementById('gen1').value;\r\n            setUseGen(gen);\r\n        }\r\n        else if (document.getElementById('gen2').checked) {\r\n            gen = document.getElementById('gen2').value;\r\n            setUseGen(gen);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <form method='POST' className={classes.loginForm} onSubmit = {loginHandler}>\r\n                <div className={classes.details}>\r\n                    <input \r\n                        type= \"text\" \r\n                        placeholder=' ' \r\n                        required \r\n                        className={classes.textBox}\r\n                        onBlur = {nameHandler}>\r\n                    </input>\r\n                    <label className={classes.formLabel}>\r\n                       Full Name\r\n                    </label>\r\n                </div>\r\n                <div className={classes.gen} onClick = {genHandler}>\r\n                    <p>Select Gender:&nbsp;</p>\r\n                    <input type=\"radio\" id= \"gen1\" name=\"gender\" value=\"Female\" required>\r\n                    </input>\r\n                    <label for=\"gen1\">Female</label>\r\n                    <input type=\"radio\" id= \"gen2\" name=\"gender\" value=\"Male\" required>\r\n                    </input>\r\n                    <label for=\"gen2\">Male</label>\r\n                </div>\r\n\r\n                <button type= \"submit\" value=\"Submit\" className={classes.save}>SAVE</button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;"]},"metadata":{},"sourceType":"module"}