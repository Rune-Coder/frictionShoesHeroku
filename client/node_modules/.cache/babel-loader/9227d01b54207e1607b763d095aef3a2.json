{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { UserData } from \"../connect/userData\";\nimport { SetCookie, GetCookie, RemoveCookie } from \"../hooks/cookies\";\nconst initialLoginState = {\n  token: GetCookie(\"token\") ? GetCookie(\"token\") : \"\",\n\n  get userData() {\n    return this.token !== \"\" ? UserData(this.token) : {};\n  },\n\n  get loggedin() {\n    return this.userData !== {};\n  }\n\n};\nconsole.log(initialLoginState.userData);\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState: initialLoginState,\n  reducers: {\n    login(state, action) {\n      const user = action.payload;\n      state.token = user.token;\n      state.userData = {\n        _id: user._id,\n        name: user.name,\n        mobile: user.mobile,\n        email: user.email,\n        gender: user.gender,\n        isAdmin: user.isAdmin\n      };\n      state.loggedin = true;\n      SetCookie(\"token\", user.token);\n      localStorage.removeItem(\"products\");\n      localStorage.removeItem(\"billStore\");\n    },\n\n    logout(state) {\n      state.token = \"\";\n      state.userData = {};\n      state.loggedin = false;\n      RemoveCookie(\"token\");\n    }\n\n  }\n});\nexport const loginActions = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/store/loginStore.js"],"names":["createSlice","UserData","SetCookie","GetCookie","RemoveCookie","initialLoginState","token","userData","loggedin","console","log","loginSlice","name","initialState","reducers","login","state","action","user","payload","_id","mobile","email","gender","isAdmin","localStorage","removeItem","logout","loginActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,kBAAnD;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAEH,SAAS,CAAC,OAAD,CAAT,GAAqBA,SAAS,CAAC,OAAD,CAA9B,GAA0C,EAD3B;;AAEtB,MAAII,QAAJ,GAAc;AAAE,WAAQ,KAAKD,KAAL,KAAe,EAAf,GAAoBL,QAAQ,CAAC,KAAKK,KAAN,CAA5B,GAA2C,EAAnD;AAAwD,GAFlD;;AAGtB,MAAIE,QAAJ,GAAc;AAAE,WAAQ,KAAKD,QAAL,KAAkB,EAA1B;AAA+B;;AAHzB,CAA1B;AAMAE,OAAO,CAACC,GAAR,CAAYL,iBAAiB,CAACE,QAA9B;AAEA,MAAMI,UAAU,GAAGX,WAAW,CAAC;AAC3BY,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAER,iBAFa;AAG3BS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAe;AAChB,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACV,KAAN,GAAcY,IAAI,CAACZ,KAAnB;AACAU,MAAAA,KAAK,CAACT,QAAN,GAAiB;AACba,QAAAA,GAAG,EAAEF,IAAI,CAACE,GADG;AAEbR,QAAAA,IAAI,EAAEM,IAAI,CAACN,IAFE;AAGbS,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAHA;AAIbC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJC;AAKbC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MALA;AAMbC,QAAAA,OAAO,EAAEN,IAAI,CAACM;AAND,OAAjB;AAQAR,MAAAA,KAAK,CAACR,QAAN,GAAiB,IAAjB;AACAN,MAAAA,SAAS,CAAC,OAAD,EAAUgB,IAAI,CAACZ,KAAf,CAAT;AACAmB,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,KAhBK;;AAiBNC,IAAAA,MAAM,CAACX,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACV,KAAN,GAAc,EAAd;AACAU,MAAAA,KAAK,CAACT,QAAN,GAAiB,EAAjB;AACAS,MAAAA,KAAK,CAACR,QAAN,GAAiB,KAAjB;AACAJ,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACH;;AAtBK;AAHiB,CAAD,CAA9B;AA6BA,OAAO,MAAMwB,YAAY,GAAGjB,UAAU,CAACkB,OAAhC;AAEP,eAAelB,UAAU,CAACmB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { UserData } from \"../connect/userData\";\r\nimport { SetCookie, GetCookie, RemoveCookie } from \"../hooks/cookies\";\r\n\r\nconst initialLoginState = {\r\n    token: GetCookie(\"token\") ? GetCookie(\"token\") : \"\", \r\n    get userData(){ return (this.token !== \"\" ? UserData(this.token) : {}) }, \r\n    get loggedin(){ return (this.userData !== {}) }\r\n};\r\n\r\nconsole.log(initialLoginState.userData);\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: initialLoginState,\r\n    reducers: {\r\n        login(state, action){\r\n            const user = action.payload;\r\n            state.token = user.token;\r\n            state.userData = {\r\n                _id: user._id,\r\n                name: user.name,\r\n                mobile: user.mobile,\r\n                email: user.email,\r\n                gender: user.gender,\r\n                isAdmin: user.isAdmin\r\n            };\r\n            state.loggedin = true;\r\n            SetCookie(\"token\", user.token);\r\n            localStorage.removeItem(\"products\");\r\n            localStorage.removeItem(\"billStore\");\r\n        },\r\n        logout(state){\r\n            state.token = \"\";\r\n            state.userData = {};\r\n            state.loggedin = false;\r\n            RemoveCookie(\"token\");\r\n        }\r\n    },\r\n});\r\n\r\nexport const loginActions = loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;"]},"metadata":{},"sourceType":"module"}