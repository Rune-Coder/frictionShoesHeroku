{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-Project-1\\\\src\\\\pages\\\\paymentSuccess\\\\paymentSuccess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BadgeCheckIcon from '../../icons/badgeCheckIcon';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addressActions } from '../../store/addressStore';\nimport classes from './paymentSuccess.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentSuccess(props) {\n  _s();\n\n  useEffect(() => {\n    document.title = 'Online Shopping site for shoes in India | Friction';\n  });\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const login = useSelector(state => state.login.loggedin);\n  useEffect(() => {\n    const address = localStorage.getItem(\"address\") ? JSON.parse(localStorage.getItem(\"address\")) : {};\n    if (!login || !address.pin) navigate(`/`, {\n      replace: true\n    });\n  }, [navigate, login]);\n  const userSub = useSelector(state => state.login.userData);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    //get orders data mongodb\n    async function getOrders(email) {\n      const res = await fetch(\"/api/user/history-get\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.orders) setOrders(data.orders);\n    }\n\n    getOrders(userSub.email);\n  }, [userSub.email]);\n  useEffect(() => {\n    const bill = localStorage.getItem(\"billStore\") ? JSON.parse(localStorage.getItem(\"billStore\")) : [{\n      amount: 0\n    }];\n    const products = localStorage.getItem(\"products\") ? JSON.parse(localStorage.getItem(\"products\")) : [];\n    const address = localStorage.getItem(\"address\") ? JSON.parse(localStorage.getItem(\"address\")) : {};\n    var currOrder = orders.slice();\n    currOrder.push({\n      order_id: \"\",\n      status: \"processing\",\n      bill: bill,\n      products: products,\n      payment: \"Online\",\n      address: address,\n      date: \"\"\n    }); //post orders\n\n    async function postOrders(email, orders) {\n      const cart = [];\n      const bill = [];\n      const res = await fetch(\"/api/user/history-create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          cart,\n          bill,\n          orders\n        })\n      });\n      await res.json();\n    }\n\n    postOrders(userSub.email, currOrder);\n    dispatch(addressActions.remAddress());\n  }, [userSub.email, orders, dispatch, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layout,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.badge,\n        children: /*#__PURE__*/_jsxDEV(BadgeCheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order Successfull\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentSuccess, \"im9OkYDrfvrY2EnlPxCfwsY7ynw=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = PaymentSuccess;\nexport default PaymentSuccess;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"sources":["D:/Web Development/React-Project-1/src/pages/paymentSuccess/paymentSuccess.js"],"names":["React","useState","useEffect","useNavigate","BadgeCheckIcon","useSelector","useDispatch","addressActions","classes","PaymentSuccess","props","document","title","dispatch","navigate","login","state","loggedin","address","localStorage","getItem","JSON","parse","pin","replace","userSub","userData","orders","setOrders","getOrders","email","res","fetch","method","headers","body","stringify","data","json","ok","bill","amount","products","currOrder","slice","push","order_id","status","payment","date","postOrders","cart","remAddress","layout","badge"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BadgeCheckIcon from '../../icons/badgeCheckIcon';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addressActions } from '../../store/addressStore';\r\nimport classes from './paymentSuccess.module.css';\r\n\r\nfunction PaymentSuccess(props){\r\n\r\n    useEffect(() => {\r\n        document.title = 'Online Shopping site for shoes in India | Friction';\r\n    });\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    let navigate = useNavigate();\r\n    const login = useSelector((state) => state.login.loggedin);\r\n\r\n    useEffect(() =>{\r\n\r\n        const address = localStorage.getItem(\"address\") ? JSON.parse(localStorage.getItem(\"address\")) : {};\r\n\r\n        if(!login || !address.pin)\r\n            navigate(`/`, { replace: true });\r\n\r\n    }, [navigate, login]);\r\n\r\n    \r\n    const userSub = useSelector((state) => state.login.userData);\r\n\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() =>{\r\n\r\n         //get orders data mongodb\r\n        async function getOrders(email){\r\n\r\n            const res = await fetch(\"/api/user/history-get\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email })\r\n            });\r\n        \r\n            const data = await res.json();\r\n                \r\n            if(res.ok && data.orders)\r\n                setOrders(data.orders);\r\n        }\r\n        \r\n        getOrders(userSub.email);\r\n        \r\n    }, [userSub.email]);\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        const bill = localStorage.getItem(\"billStore\") ? JSON.parse(localStorage.getItem(\"billStore\")) : [{amount: 0}];\r\n        const products = localStorage.getItem(\"products\") ? JSON.parse(localStorage.getItem(\"products\")) : [];\r\n        const address = localStorage.getItem(\"address\") ? JSON.parse(localStorage.getItem(\"address\")) : {};\r\n\r\n        var currOrder = orders.slice();\r\n            currOrder.push({\r\n                order_id: \"\",\r\n                status: \"processing\",\r\n                bill: bill,\r\n                products: products,\r\n                payment: \"Online\",\r\n                address: address,\r\n                date: \"\"\r\n        });\r\n        \r\n        //post orders\r\n        async function postOrders(email, orders){\r\n\r\n            const cart = [];\r\n            const bill = [];\r\n            const res = await fetch(\"/api/user/history-create\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email, cart, bill, orders })\r\n            });\r\n        \r\n            await res.json();\r\n            \r\n\r\n        }\r\n\r\n        postOrders(userSub.email, currOrder);\r\n\r\n        dispatch(addressActions.remAddress());\r\n\r\n       \r\n\r\n    }, [userSub.email, orders, dispatch, navigate]);\r\n\r\n    return(\r\n        <div className={classes.layout}>\r\n            <div><span className={classes.badge}><BadgeCheckIcon /></span></div>\r\n            <p>Order Successfull</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentSuccess;"]},"metadata":{},"sourceType":"module"}